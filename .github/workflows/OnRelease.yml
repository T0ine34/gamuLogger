name: On Release
on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  tests:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for all tags

    - name: install make
      run: sudo apt-get install -y make

    - name: setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest coverage build

    - name: build
      run: make tests VERSION=${{ github.event.release.tag_name }}

    - name: publish test report
      if: success() || failure()
      uses: mikepenz/action-junit-report@v5
      with:
        report_paths: 'test-report.xml'
        include_passed: true

    - name: cobertura-report
      if: success() || failure()
      uses: 5monkeys/cobertura-action@v14
      with:
        path: coverage.xml
        minimum_coverage: 90
        fail_below_threshold: true
        report_name: Coverage Report (${{ matrix.python-version }})
        skip_covered: false


  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: install make
      run: sudo apt-get install -y make

    - name: setup Python3.12
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest build

    - name: build
      run : make VERSION=${{ github.event.release.tag_name }}

    - name: Store artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/*

    - name: Publish release assets
      uses: AButler/upload-release-assets@v3.0
      with:
        files: "dist/*"
        repo-token: ${{ secrets.GITHUB_TOKEN }}

  publish-pypi:
    name: Publish to PyPI
    needs: [build, tests]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/gamuLogger
    permissions:
      id-token: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
